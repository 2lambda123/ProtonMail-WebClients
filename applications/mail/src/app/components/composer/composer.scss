@import '~@proton/styles/scss/config';

.composer {
	position: absolute;
	inset-block-end: 0;
	z-index: 300;

	block-size: rem(520);
	inline-size: rem(600);
	max-block-size: 100%;
	max-inline-size: 100%;
	overflow: hidden;

	background: var(--background-norm);
	box-shadow: var(--shadow-lifted);
	border-radius: var(--border-radius-medium) var(--border-radius-medium) 0 0;
	color: var(--text-norm);

	transition: 0.15s easing(easeOutQuint);

	.composer-content {
		min-block-size: 10em;
	}
}

.composer--is-blur {
	--blur-opacity: 0.25;

	box-shadow: var(--shadow-norm);

	.composer-title-bar {
		background: var(--background-weak);
		color: var(text-norm);

		& > * {
			opacity: var(--blur-opacity);
		}
	}

	.composer-blur-container {
		opacity: var(--blur-opacity);
		pointer-events: none;
	}
}

.composer--is-minimized {
	block-size: 2.5em; // title bar height
}

@include respond-to($breakpoint-medium-landscape, 'min') {
	.composer--is-maximized {
		.message-attachmentList-item-container {
			inline-size: 33%;

			&:first-child,
			&:nth-child(2),
			&:nth-child(3) {
				margin-block-start: 0;
			}
			&:nth-child(even) {
				padding-inline-start: 0;
			}
			&:nth-child(odd) {
				padding-inline-end: 0;
			}
			&:nth-child(3n-1),
			&:nth-child(3n) {
				padding-inline-start: 1em;
			}
		}
	}
}

.composer-title-bar {
	background: var(--background-strong);
	color: var(--text-norm);
	transition: background 0.15s ease-out;

	& > * {
		transition: opacity 0.15s ease-out;
	}
}

.composer-title-bar-tooltip {
	align-self: stretch;
	justify-content: stretch;
	align-items: stretch;
}

.composer-container {
	overflow: hidden;
	background: var(--background-norm);
}

.composer-blur-container {
	transition: opacity 0.15s ease-out;
}

.composer-meta-label,
.label.composer-meta-label {
	max-inline-size: 8em;
	inline-size: 15%;
	@include respond-to($breakpoint-small) {
		// temporary workaround
		inline-size: 25%;
	}
}

.composer-meta .composer-addresses-fakefield {
	min-block-size: rem(35);
	max-block-size: 2.5em;
	padding-inline-end: em(16);
	cursor: text;
	&.disabled {
		color: var(--field-disabled-text-color);
		border-color: var(--field-disabled);
		.composer-addresses-addressIcon {
			opacity: 0.5;
		}
	}
}

.composer-addresses-container-line:not(:first-child) {
	padding-inline-end: rem(30);
}

.composer-addresses-container {
	display: flex;
	flex-wrap: wrap;
	inline-size: 100%;
	position: relative;
	max-block-size: 100px;
	overflow-y: auto;
	overflow-x: hidden;

	&.field {
		padding-block: 0.25em;
		padding-inline: 0.5em;
		block-size: auto !important;
	}

	&.composer-addresses-container-closed {
		padding-inline-end: 1em;
	}

	&::after {
		// trick to keep space in case of loooooooong email with scroll and last one
		content: '';
		inline-size: 100%;
		block-size: rem(1);
	}

	.field {
		border: none;
		padding: 0;
		min-inline-size: rem(100);
		background: inherit;
		block-size: auto;

		&:focus {
			box-shadow: none;
		}
	}
}
.composer-to-editor {
	block-size: auto;
	min-block-size: rem($default-height-fields); // to avoid tiny layout shifts
	padding-block: em(1) 0;
	&.composer-editor-expanded {
		padding-block: 0.25em;
		padding-inline-start: 0.5em;
		.field:empty {
			// only for placeholder position when empty
			margin-inline-start: 0.65em;
		}
	}
	.composer-addresses-input-container {
		margin-inline-start: 0;
	}
}

.composer-editor-collapsed .field {
	border: none;
	padding: 0;
	min-inline-size: rem(100);
	background: inherit;
	block-size: auto;

	&:focus {
		box-shadow: none;
	}
}

/*
  everything inside addresses should be inline in order to
  make "ellipsis" properly working, so fixed the alignment of
  image this way
*/
.composer-addresses-addressIcon {
	inset-block-start: rem(-2);
	&:empty {
		margin-inline-end: 0;
	}
}

.composer-addresses-autocomplete {
	ul {
		position: absolute;
		inset-inline-start: 0;
		inset-block-start: calc(100% + 5px);
		z-index: 10;
		list-style: none;
		box-shadow: var(--shadow-lifted);
		background: var(--background-norm);
		inline-size: calc(100% - 40px);
		margin-block: 0;
		margin-inline: 20px 0;
		padding: 0;

		max-block-size: rem(200);
		overflow-y: auto;
		overflow-x: hidden;
	}

	li {
		cursor: pointer;
		padding: 0.5em;
		text-overflow: ellipsis;
		max-inline-size: 100%;
		overflow: hidden;

		&[aria-selected='true'] {
			background-color: var(--interaction-norm);
			color: var(--interaction-norm-contrast);
		}

		&:hover {
			background-color: var(--background-weak);
		}
	}

	.visually-hidden {
		position: absolute;
		clip: rect(0, 0, 0, 0);
	}
}

// .composer-to-editor.composer-editor-expanded .composer-addresses-input-container
.composer-addresses-input-container {
	// Here I tried to keep field height only with margin calculations
	margin-block: calc(#{em(6)} - 0.25em);
	margin-inline: calc(#{em(16)} - 0.5em) 0.5em;
}

.composer-addresses-item {
	background-color: var(--background-weak);
	text-shadow: none;

	+ .composer-addresses-input-container {
		margin-inline-start: 0;
		margin-block: calc(0.25em + 1px);
	}
}

.composer-addresses-item.invalid {
	border-color: var(--signal-danger);
	color: var(--signal-danger);

	.composer-addresses-item-label {
		border-right-color: currentColor;
	}
}

.addresses-contacts-table {
	th:first-child {
		inline-size: rem(35);
	}
}

.composer-editor-embedded {
	overflow: hidden;
	z-index: 1500; // ask Embedding should always be on top of the toolbar!
	color: var(--text-norm);
	text-align: center;

	&::before {
		content: '';
		position: absolute;
		z-index: 3;
		inset: 0;
		background-color: var(--background-norm);
		opacity: 0.5;
		backdrop-filter: blur(3px);
	}

	.modal {
		z-index: 667;
		footer {
			padding-block-end: 0.5em;
		}
	}
	.modal-header {
		padding-block-start: 0.5em;
	}

	.modal-title {
		padding-inline-end: 0;
	}

	// TODO: Add the image icon in background
}

.composer-editor-dropzone {
	border: 5px dashed var(--border-norm);
	background-color: var(--background-norm);
	opacity: 0.85;

	&-text {
		font-size: 2em;
		opacity: 0.75;
	}
}

.composer-body-container {
	overflow-y: auto;
	overflow-x: hidden;

	textarea {
		resize: none;
		font-family: $font-family-monospace;
	}
}

.composer-attachments-button-wrapper {
	position: relative;
	overflow: hidden;
	padding: 5px; // hack to save space for the hover halo on the button
	margin: -5px;

	input[type='file'] {
		position: absolute;
		opacity: 0;
		inline-size: 0;
		block-size: 0;
	}

	input[type='file']:hover + .button,
	input[type='file']:focus + .button,
	input[type='file']:focus-within + .button {
		color: var(--text-norm);
		box-shadow: var(--shadow-norm);
	}

	/* Fix for Safari */
	input[type='file']::-webkit-file-upload-button {
		display: none;
	}
}

.composer .editor-squire-wrapper {
	background: white;
}

.editor-squire-wrapper,
.editor-ellipsis-button-container {
	border-end-start-radius: var(--border-radius-medium);
	border-end-end-radius: var(--border-radius-medium);
}
.composer-content--has-attachments,
.editor--showEllipsisButton {
	.editor,
	.editor::after,
	.editor-squire-wrapper {
		border-end-start-radius: 0;
		border-end-end-radius: 0;
	}
}
.composer-content--has-attachments {
	.editor-ellipsis-button-container {
		border-end-start-radius: 0;
		border-end-end-radius: 0;
	}
}

// overrides only in composer case
.composer-attachments-list {
	border-inline: 1px solid var(--border-norm);
	border-block-end: 1px solid var(--border-norm);
	border-end-start-radius: var(--border-radius-medium);
	border-end-end-radius: var(--border-radius-medium);

	.message-attachmentList {
		border-block-start: 1px solid var(--border-norm);
		overflow: auto;
		max-block-size: 8.5em;
		padding-block-start: 1em;
	}
}

.composer-inner-modal .modal {
	inline-size: 90%;
	block-size: 90%;
	max-block-size: 90%;
	@include respond-to($breakpoint-small) {
		block-size: auto;
	}
}

/*
 * footer = action buttons
 */

.composer-actions--has-scroll {
	margin-block-start: 0.5em;
	padding-block-start: 0.5em;
	box-shadow: 0 -5px 5px 0 var(--background-strong);
}

// Keep minimal size when activity label is empty
.composer-send-button {
	min-inline-size: rem(40);
	@include respond-to($breakpoint-small) {
		min-inline-size: 0;
	}
}

.composer-addresses-item-dragged {
	position: absolute;
	cursor: move;
}

.composer-addresses-item-drag-placeholder {
	inline-size: var(--width, 5em);
	border-radius: var(--border-radius-medium);
	border: 1px dashed currentColor;
}
